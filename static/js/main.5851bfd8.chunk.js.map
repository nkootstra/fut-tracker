{"version":3,"sources":["Provider.js","Transition.js","components/Header.js","components/SubObjective.js","components/Countdown.js","components/Objective.js","components/Objectives.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","React","createContext","objectives","progress","Provider","state","SetupState","updateProgress","currentProgress","id","updatedState","update","$merge","updateAndSave","JSON","parse","localStorage","getItem","hideCompleted","filter","Objectives","stateUpdate","Promise","resolve","reject","setState","storeStateToLocalStorage","error","newState","prop","this","setItem","stringify","children","props","value","Component","TransitionContext","parent","CSSTransition","show","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","appear","enterClasses","split","s","length","enterFromClasses","enterToClasses","leaveClasses","leaveFromClasses","leaveToClasses","addClasses","node","classes","classList","add","removeClasses","remove","unmountOnExit","in","addEndListener","done","addEventListener","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","rest","useContext","isInitialRender","useRef","useEffect","current","useIsInitialRender","undefined","Header","showFilter","className","role","aria-label","type","onClick","HiddenFilter","SubObjective","progression","completed","objective","amount","handleProgress","currentProgression","isCompleted","title","style","width","Math","round","Number","EPSILON","description","handleProcess","disabled","dayjs","relativeTime","timer","Countdown","timeLeft","updateCountdown","setTimeout","date","isBefore","concat","to","clearTimeout","Objective","handleProgression","bind","context","end_date","aria-disabled","subObjectives","map","sub","key","contextType","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.5851bfd8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Objectives from './data/Objectives.json';\nimport update from 'immutability-helper';\n\nexport const StateContext = React.createContext({objectives:[],progress:[]});\n\nconst objectivesKey = 'state';\n\nexport default class Provider extends Component {\n\n    state = this.SetupState();\n\n    SetupState() {\n        let state = JSON.parse(localStorage.getItem(objectivesKey));\n\n        if (!state) {\n            state = {\n                progress: {},\n                hideCompleted: false,\n                filter: {}\n            };\n        }\n        state.objectives = Objectives;\n        state.updateProgress = (currentProgress, id) => this.updateProgress(currentProgress, id);\n\n        return state;\n    }\n\n    updateProgress = (currentProgress, id) => {\n        const updatedState = update(this.state, {\n            progress: {\n                $merge: {[id]: currentProgress}\n            }\n        });\n        return this.updateAndSave(updatedState);\n    };\n\n    updateAndSave(stateUpdate) {\n        return new Promise((resolve, reject) => {\n            this.setState(stateUpdate, () => {\n                try {\n                    this.storeStateToLocalStorage();\n                    resolve();\n                } catch (error) {\n                    reject(error);\n                }\n            });\n        });\n    }\n\n    storeStateToLocalStorage() {\n        const newState = {};\n\n        for (const prop in this.state) {\n            if (typeof prop === 'function' || prop === 'objectives') {\n                continue;\n            }\n            newState[prop] = this.state[prop];\n        }\n\n        localStorage.setItem(objectivesKey, JSON.stringify(newState));\n    }\n\n    render() {\n        const { children } = this.props;\n        return <StateContext.Provider value={this.state}>{children}</StateContext.Provider>;\n    }\n}","import React from 'react';\nimport { CSSTransition as ReactCSSTransition } from 'react-transition-group'\nimport { useRef, useEffect, useContext } from 'react'\n\nconst TransitionContext = React.createContext({\n    parent: {},\n})\n\nfunction useIsInitialRender() {\n    const isInitialRender = useRef(true)\n    useEffect(() => {\n        isInitialRender.current = false\n    }, [])\n    return isInitialRender.current\n}\n\nfunction CSSTransition({\n                           show,\n                           enter = '',\n                           enterFrom = '',\n                           enterTo = '',\n                           leave = '',\n                           leaveFrom = '',\n                           leaveTo = '',\n                           appear,\n                           children,\n                       }) {\n    const enterClasses = enter.split(' ').filter((s) => s.length)\n    const enterFromClasses = enterFrom.split(' ').filter((s) => s.length)\n    const enterToClasses = enterTo.split(' ').filter((s) => s.length)\n    const leaveClasses = leave.split(' ').filter((s) => s.length)\n    const leaveFromClasses = leaveFrom.split(' ').filter((s) => s.length)\n    const leaveToClasses = leaveTo.split(' ').filter((s) => s.length)\n\n    function addClasses(node, classes) {\n        classes.length && node.classList.add(...classes)\n    }\n\n    function removeClasses(node, classes) {\n        classes.length && node.classList.remove(...classes)\n    }\n\n    return (\n        <ReactCSSTransition\n            appear={appear}\n            unmountOnExit\n            in={show}\n            addEndListener={(node, done) => {\n                node.addEventListener('transitionend', done, false)\n            }}\n            onEnter={(node) => {\n                addClasses(node, [...enterClasses, ...enterFromClasses])\n            }}\n            onEntering={(node) => {\n                removeClasses(node, enterFromClasses)\n                addClasses(node, enterToClasses)\n            }}\n            onEntered={(node) => {\n                removeClasses(node, [...enterToClasses, ...enterClasses])\n            }}\n            onExit={(node) => {\n                addClasses(node, [...leaveClasses, ...leaveFromClasses])\n            }}\n            onExiting={(node) => {\n                removeClasses(node, leaveFromClasses)\n                addClasses(node, leaveToClasses)\n            }}\n            onExited={(node) => {\n                removeClasses(node, [...leaveToClasses, ...leaveClasses])\n            }}\n        >\n            {children}\n        </ReactCSSTransition>\n    )\n}\n\nfunction Transition({ show, appear, ...rest }) {\n    const { parent } = useContext(TransitionContext)\n    const isInitialRender = useIsInitialRender()\n    const isChild = show === undefined\n\n    if (isChild) {\n        return (\n            <CSSTransition\n                appear={parent.appear || !parent.isInitialRender}\n                show={parent.show}\n                {...rest}\n            />\n        )\n    }\n\n    return (\n        <TransitionContext.Provider\n            value={{\n                parent: {\n                    show,\n                    isInitialRender,\n                    appear,\n                },\n            }}\n        >\n            <CSSTransition appear={appear} show={show} {...rest} />\n        </TransitionContext.Provider>\n    )\n}\n\nexport default Transition","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Transition from '../Transition';\n\nexport default class Header extends Component {\n\n    state = {\n        showFilter: false\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"p-6 bg-gray-800\">\n                    <div className=\"container mx-auto lg:px-6 sm:px-0\">\n                        <div className=\"md:flex md:items-center md:justify-between\">\n                            <div className=\"flex-1 min-w-0\">\n                                <h2 className=\"text-2xl font-bold leading-7 text-white sm:text-3xl sm:leading-9 sm:truncate\">\n                                    FUT <span role=\"img\" aria-label=\"tractor\">🚜</span>\n                                </h2>\n                            </div>\n                            <div className=\"mt-4 flex md:mt-0 md:ml-4\">\n\n                            <span className=\"shadow-sm rounded-md\">\n                                <button type=\"button\" onClick={() => this.setState({showFilter:!this.state.showFilter})}\n                                        className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm leading-5 font-medium rounded-md text-white bg-indigo-500 hover:bg-indigo-400 focus:outline-none focus:shadow-outline-indigo focus:border-indigo-600 active:bg-indigo-600 transition duration-150 ease-in-out\">\n                                Filter\n                                </button>\n                            </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <HiddenFilter show={this.state.showFilter} />\n            </div>\n\n        );\n    }\n}\n\nclass HiddenFilter extends Component {\n    render() {\n        return (\n            <Transition\n                show={this.props.show}\n                enter=\"transition ease-out duration-100 transform\"\n                enterFrom=\"opacity-0 scale-95\"\n                enterTo=\"opacity-100 scale-100\"\n                leave=\"transition ease-in duration-75 transform\"\n                leaveFrom=\"opacity-100 scale-100\"\n                leaveTo=\"opacity-0 scale-95\">\n                <div className=\"container mx-auto ease-out duration-300\">\n                    <section className=\"mt-6 bg-white shadow px-4 py-5 sm:rounded-lg sm:p-6\">\n                        No hidden items mate\n                    </section>\n                </div>\n            </Transition>\n        );\n    }\n}\n\nHiddenFilter.propTypes = {\n    show: PropTypes.string.isRequired\n};","import React, { Component } from \"react\";\n\nexport default class SubObjective extends Component {\n\n    handleProcess(progression) {\n        // check if completed\n        let completed = progression >= this.props.objective.amount;\n\n        this.props.handleProgress(\n            {progression:progression, completed:completed},\n            this.props.objective.id\n        )\n    }\n\n    render() {\n        let currentProgression = this.props.currentProgression?.progression || 0;\n        let isCompleted = this.props.currentProgression?.completed || false;\n\n        return (\n\n            <li className={ isCompleted ? 'opacity-25' : '' }>\n                <div className=\"px-4 py-4 sm:px-6\">\n                    <div className=\"flex items-center justify-between\">\n                        <div className=\"text-sm leading-5 font-medium text-indigo-600 truncate\">\n                            {this.props.objective.title} ({currentProgression}/{this.props.objective.amount})\n                        </div>\n                        <div className=\"flex\">\n                            <div className=\"inline-flex block h-2 w-32 md:w-64 bg-gray-100 rounded-md\">\n                                <span className=\"h-full w-auto bg-green-400 rounded-md text-center progressbar\"\n                                      style={{width: `${Math.round( (currentProgression/this.props.objective.amount) * 100 + Number.EPSILON)}%` }}></span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"mt-2 flex justify-between\">\n                        <div className=\"sm:flex\">\n                            <div className=\"mr-6 flex items-center text-sm leading-5 text-gray-500\">\n                                {this.props.objective.description}\n                            </div>\n                        </div>\n                        <div className=\"sm:flex\">\n                            <div className=\"mr-1 flex items-center\">\n                                {currentProgression!== 0 &&\n                                <button type=\"button\"\n                                        onClick={() => this.handleProcess(currentProgression-1)}\n                                        className=\"relative inline-flex items-center px-3 py-1.5 border border-transparent text-sm leading-3 font-medium rounded-md text-white bg-red-600 hover:bg-red-500 focus:outline-none focus:shadow-outline-indigo focus:border-red-700 active:bg-red-700\">\n                                    -1\n                                </button>}\n\n                                <button type=\"button\"\n                                        disabled={isCompleted}\n                                        onClick={() => this.handleProcess(currentProgression+1)}\n                                        className=\"ml-2 relative inline-flex items-center px-3 py-1.5 border border-transparent text-sm leading-3 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-500 focus:outline-none focus:shadow-outline-indigo focus:border-indigo-700 active:bg-indigo-700\">\n                                    +1\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </li>\n        );\n    }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\n\ndayjs.extend(relativeTime)\n\nlet timer = null;\n\nexport default class Countdown extends Component {\n\n    state = {\n        timeLeft: \"\"\n    }\n\n    componentDidMount() {\n        this.updateCountdown();\n        timer = setTimeout(() => {\n            this.updateCountdown();\n        }, 6000)\n    }\n\n    updateCountdown() {\n        this.setState({timeLeft:(!dayjs(this.props.date).isBefore(dayjs()) ?\n                \"Ojective ends \".concat(dayjs().to(this.props.date)) : \"Objective ended\")});\n    }\n\n    componentWillUnmount() {\n        clearTimeout(timer);\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"px-3 py-2 font-medium text-sm leading-5 rounded-md text-gray-600 bg-gray-200\">\n                {this.state.timeLeft}\n            </div>\n        );\n    }\n}\n\nCountdown.propTypes = {\n    date: PropTypes.string.isRequired\n};","import React, { Component } from \"react\";\nimport { StateContext } from '../Provider';\nimport SubObjective from \"./SubObjective\";\nimport Countdown from \"./Countdown\";\n\nexport default class Objective extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleProgression = this.handleProgression.bind(this);\n    }\n\n    handleProgression(currentProgress, id) {\n        this.context.updateProgress(currentProgress, id);\n    }\n\n    render() {\n        return (\n            <div className=\"bg-white overflow-hidden sm:rounded-lg sm:shadow pb-5 mb-5\">\n                <div className=\"bg-white px-4 py-5 border-b border-gray-200 sm:px-6\">\n                    <div className=\"-ml-4 -mt-4 flex justify-between items-center flex-wrap sm:flex-no-wrap\">\n                        <div className=\"ml-4 mt-2\">\n                            <h3 className=\"text-lg leading-6 font-medium text-gray-900\">\n                                {this.props.objective.title}\n                            </h3>\n                            <span className=\"text-xs text-gray-600 hidden md:block\">{this.props.objective.description}</span>\n                        </div>\n                        <div className=\"ml-4 mt-2 flex-shrink-0\">\n                          <span className=\"inline-flex\">\n                            <Countdown date={this.props.objective.end_date}/>\n                          </span>\n                        </div>\n                    </div>\n                </div>\n                <ul aria-disabled=\"true\">\n                    { this.props.subObjectives.map( sub => {\n\n                        let progression = this.context.progress[sub.id];\n\n                        return (<SubObjective key={sub.id}\n                                              parent={this.props.parent}\n                                              objective={sub}\n                                              currentProgression={progression}\n                                              handleProgress={this.handleProgression}/>);\n\n\n                    })}\n                </ul>\n            </div>\n        );\n    }\n}\n\nObjective.contextType = StateContext;","import React, { Component } from \"react\";\nimport { StateContext } from \"../Provider\";\nimport Objective from './Objective'\n\nexport default class Objectives extends Component {\n\n    render() {\n        const { objectives } = this.context;\n        return (\n            <div>\n                { objectives.map(objective =>\n                    <Objective key={objective.id}\n                               parent={objective.id}\n                               objective={objective}\n                               subObjectives={objective.objectives}/>)\n                }\n            </div>\n        );\n    }\n}\n\nObjectives.contextType = StateContext;","import React, { Component } from 'react';\nimport Provider from \"./Provider\";\nimport Header from \"./components/Header\";\nimport Objectives from \"./components/Objectives\";\nimport './App.css';\n\nexport default class App extends Component {\n\n    render() {\n        return (\n            <Provider>\n                <Header />\n                <div className=\"mt-5 container mx-auto\">\n                    <Objectives />\n                </div>\n            </Provider>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}